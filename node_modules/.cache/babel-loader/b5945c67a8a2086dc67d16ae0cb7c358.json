{"ast":null,"code":"import _classCallCheck from \"/Users/zhangchiyang/Desktop/study/learnhooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhangchiyang/Desktop/study/learnhooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zhangchiyang/Desktop/study/learnhooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zhangchiyang/Desktop/study/learnhooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zhangchiyang/Desktop/study/learnhooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/memo/index.jsx\";\n//React.memo() 是高阶函数能将函数组件转换成类似于React.PureComponent组件\nimport React, { memo, Component } from \"react\";\n\nfunction Child(_ref) {\n  var seconds = _ref.seconds;\n  console.log(\"I am rendering\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Memo\\u7EC4\\u4EF6 seconds->\", seconds, \" \");\n}\n\nfunction areEqual(prevProps, nextProps) {\n  if (prevProps.seconds === nextProps.seconds) {\n    return true;\n  } else {\n    return false;\n  }\n} // const RocketComponent = props => <div>my rocket component. {props.fuel}!</div>;\n// 创建一个只在prop改变时发生渲染的版本\n// const MemoizedRocketComponent = memo(RocketComponent);\n// const memocom = () => {\n//   return memo(Child, areEqual);\n// };\n\n\nvar DemoComponent = memo(Child, areEqual);\n\nvar Greeting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Greeting, _Component);\n\n  function Greeting() {\n    _classCallCheck(this, Greeting);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Greeting).apply(this, arguments));\n  }\n\n  _createClass(Greeting, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DemoComponent, {\n        seconds: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Greeting;\n}(Component);\n\nexport default Greeting; // function Child({seconds}){\n//     console.log('I am rendering');\n//     return (\n//         <div>I am update every {seconds} seconds</div>\n//     )\n// };\n// export default React.memo(Child)","map":{"version":3,"sources":["/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/memo/index.jsx"],"names":["React","memo","Component","Child","seconds","console","log","areEqual","prevProps","nextProps","DemoComponent","Greeting"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,QAAuC,OAAvC;;AAEA,SAASC,KAAT,OAA4B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAsBF,OAAtB,MAAP;AACD;;AAED,SAASG,QAAT,CAAkBC,SAAlB,EAA6BC,SAA7B,EAAwC;AACtC,MAAID,SAAS,CAACJ,OAAV,KAAsBK,SAAS,CAACL,OAApC,EAA6C;AAC3C,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,C,CACD;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAMM,aAAa,GAAGT,IAAI,CAACE,KAAD,EAAQI,QAAR,CAA1B;;IAEMI,Q;;;;;;;;;;;;;6BACK;AACP,aAAO,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAHoBT,S;;AAKvB,eAAeS,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//React.memo() 是高阶函数能将函数组件转换成类似于React.PureComponent组件\nimport React, { memo, Component } from \"react\";\n\nfunction Child({ seconds }) {\n  console.log(\"I am rendering\");\n  return <div>Memo组件 seconds->{seconds} </div>;\n}\n\nfunction areEqual(prevProps, nextProps) {\n  if (prevProps.seconds === nextProps.seconds) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// const RocketComponent = props => <div>my rocket component. {props.fuel}!</div>;\n\n// 创建一个只在prop改变时发生渲染的版本\n// const MemoizedRocketComponent = memo(RocketComponent);\n// const memocom = () => {\n//   return memo(Child, areEqual);\n// };\nconst DemoComponent = memo(Child, areEqual);\n\nclass Greeting extends Component {\n  render() {\n    return <DemoComponent seconds=\"20\" />;\n  }\n}\nexport default Greeting;\n\n// function Child({seconds}){\n//     console.log('I am rendering');\n//     return (\n//         <div>I am update every {seconds} seconds</div>\n//     )\n// };\n// export default React.memo(Child)\n"]},"metadata":{},"sourceType":"module"}