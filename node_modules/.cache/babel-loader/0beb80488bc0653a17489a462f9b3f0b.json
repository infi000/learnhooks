{"ast":null,"code":"import _slicedToArray from \"/Users/zhangchiyang/Desktop/study/learnhooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/hooksReducer/demo2.jsx\";\nimport React, { useEffect, useState, useReducer } from \"react\"; //eg.2 惰性初始化\n\nvar initialCount = 0;\n\nvar init = function init(initialCount) {\n  return {\n    count: initialCount\n  };\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return {\n        count: state.count - 1\n      };\n\n    case \"reset\":\n      return init(action.payload);\n\n    default:\n      throw new Error();\n  }\n};\n\nvar App = function App() {\n  var _useReducer = useReducer(reducer, initialCount, init),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Count: \", state.count), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return dispatch({\n        type: \"decrement\"\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return dispatch({\n        type: \"increment\"\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return dispatch({\n        type: \"reset\",\n        payload: initialCount\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Reset\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/hooksReducer/demo2.jsx"],"names":["React","useEffect","useState","useReducer","initialCount","init","count","reducer","state","action","type","payload","Error","App","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD,C,CACA;;AACA,IAAMC,YAAY,GAAG,CAArB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAD,YAAY,EAAI;AAC3B,SAAO;AAAEE,IAAAA,KAAK,EAAEF;AAAT,GAAP;AACD,CAFD;;AAIA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,OAAL;AACE,aAAOD,IAAI,CAACI,MAAM,CAACE,OAAR,CAAX;;AACF;AACE,YAAM,IAAIC,KAAJ,EAAN;AARJ;AAUD,CAXD;;AAaA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,oBACUV,UAAU,CAACI,OAAD,EAAUH,YAAV,EAAwBC,IAAxB,CADpB;AAAA;AAAA,MACTG,KADS;AAAA,MACFM,QADE;;AAEhB,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYN,KAAK,CAACF,KAAlB,CADF,EAEE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMQ,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMI,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMI,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAEP;AAA1B,OAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF;AAQD,CAVD;;AAWA,eAAeS,GAAf","sourcesContent":["import React, { useEffect, useState, useReducer } from \"react\";\n//eg.2 惰性初始化\nconst initialCount = 0;\nconst init = initialCount => {\n  return { count: initialCount };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    case \"reset\":\n      return init(action.payload);\n    default:\n      throw new Error();\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialCount, init);\n  return (\n    <>\n      <h1>Count: {state.count}</h1>\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n      <button onClick={() => dispatch({ type: \"reset\", payload: initialCount })}>Reset</button>\n    </>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}