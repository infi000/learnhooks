{"ast":null,"code":"var _jsxFileName = \"/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/suspense/index.jsx\";\n//新增了render 新的返回类型：fragments 和 strings\nimport React, { Suspense, lazy } from \"react\";\nimport \"./suspense.css\"; // import { useFetch } from \"react-hooks-fetch\";\n// console.log(\"异步加载数据\", useFetch);\n//动态加载组件\n\nvar LazyComp = lazy(function () {\n  return import(\"./lazy\");\n});\n\nfunction fetchApi() {\n  var promise = new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve(\"Data resolved\");\n    }, 3000);\n  });\n  return promise;\n} //创建Fetcher\n\n\nvar cached = {};\n\nvar createFetcher = function createFetcher(promiseTask) {\n  var ref = cached;\n  return function () {\n    var task = promiseTask();\n    task.then(function (res) {\n      ref = res;\n    });\n    console.log(\"🌲--ref\", ref);\n    console.log(\"🌺--cached\", cached);\n\n    if (ref === cached) {\n      throw task;\n    } //得到结果输出\n\n\n    console.log(\"🍎\", ref);\n    return ref;\n  };\n};\n\nvar requestData = createFetcher(fetchApi);\n\nfunction SuspenseComp() {\n  // const {error,data} = useFetch(\"a.php\");\n  // console.log(\"数据📚\",data)\n  // if (error) return <span>出错了/(ㄒoㄒ)/~~</span>;\n  // if (!data) return null;\n  // return <span>RemoteData:{data.title}</span>;\n  var data = requestData();\n  return React.createElement(\"p\", {\n    className: \"text-warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, data);\n}\n\nexport default (function () {\n  return React.createElement(Suspense, {\n    fallback: React.createElement(\"div\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"loading\", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(SuspenseComp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(LazyComp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/suspense/index.jsx"],"names":["React","Suspense","lazy","LazyComp","fetchApi","promise","Promise","resolve","setTimeout","cached","createFetcher","promiseTask","ref","task","then","res","console","log","requestData","SuspenseComp","data"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,OAAO,gBAAP,C,CACA;AACA;AACA;;AACA,IAAMC,QAAQ,GAAGD,IAAI,CAAC;AAAA,SAAM,OAAO,QAAP,CAAN;AAAA,CAAD,CAArB;;AAEA,SAASE,QAAT,GAAoB;AAClB,MAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrCC,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,OAAO,CAAC,eAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJe,CAAhB;AAKA,SAAOF,OAAP;AACD,C,CACD;;;AACA,IAAII,MAAM,GAAG,EAAb;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,WAAW,EAAI;AACnC,MAAIC,GAAG,GAAGH,MAAV;AACA,SAAO,YAAM;AACX,QAAMI,IAAI,GAAGF,WAAW,EAAxB;AACAE,IAAAA,IAAI,CAACC,IAAL,CAAU,UAAAC,GAAG,EAAI;AACfH,MAAAA,GAAG,GAAGG,GAAN;AACD,KAFD;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBL,GAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBR,MAAzB;;AACA,QAAIG,GAAG,KAAKH,MAAZ,EAAoB;AAClB,YAAMI,IAAN;AACD,KATU,CAUX;;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBL,GAAjB;AACA,WAAOA,GAAP;AACD,GAbD;AAcD,CAhBD;;AAiBA,IAAMM,WAAW,GAAGR,aAAa,CAACN,QAAD,CAAjC;;AACA,SAASe,YAAT,GAAwB;AACpB;AACA;AACA;AACA;AACA;AACF,MAAMC,IAAI,GAAGF,WAAW,EAAxB;AACA,SAAO;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BE,IAA7B,CAAP;AACD;;AAED,gBAAe;AAAA,SACb,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADa;AAAA,CAAf","sourcesContent":["//新增了render 新的返回类型：fragments 和 strings\nimport React, { Suspense, lazy } from \"react\";\nimport \"./suspense.css\";\n// import { useFetch } from \"react-hooks-fetch\";\n// console.log(\"异步加载数据\", useFetch);\n//动态加载组件\nconst LazyComp = lazy(() => import(\"./lazy\"));\n\nfunction fetchApi() {\n  const promise = new Promise(resolve => {\n    setTimeout(() => {\n      resolve(\"Data resolved\");\n    }, 3000);\n  });\n  return promise;\n}\n//创建Fetcher\nvar cached = {};\nconst createFetcher = promiseTask => {\n  let ref = cached;\n  return () => {\n    const task = promiseTask();\n    task.then(res => {\n      ref = res;\n    });\n    console.log(\"🌲--ref\",ref);\n    console.log(\"🌺--cached\",cached);\n    if (ref === cached) {\n      throw task;\n    }\n    //得到结果输出\n    console.log(\"🍎\",ref);\n    return ref;\n  };\n};\nconst requestData = createFetcher(fetchApi);\nfunction SuspenseComp() {\n    // const {error,data} = useFetch(\"a.php\");\n    // console.log(\"数据📚\",data)\n    // if (error) return <span>出错了/(ㄒoㄒ)/~~</span>;\n    // if (!data) return null;\n    // return <span>RemoteData:{data.title}</span>;\n  const data = requestData();\n  return <p className=\"text-warning\">{data}</p>;\n}\n\nexport default () => (\n  <Suspense fallback={<div className=\"text-danger\">loading<i></i></div>}>\n    <SuspenseComp />\n    <LazyComp />\n  </Suspense>\n);\n"]},"metadata":{},"sourceType":"module"}