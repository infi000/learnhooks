{"ast":null,"code":"import _classCallCheck from \"/Users/sf/Desktop/zcy/hooksdemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sf/Desktop/zcy/hooksdemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sf/Desktop/zcy/hooksdemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sf/Desktop/zcy/hooksdemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sf/Desktop/zcy/hooksdemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sf/Desktop/zcy/hooksdemo/src/demos/components/portalsdemo.jsx\";\n//Portals 提供了一个顶级的方法，使得我们有能力把一个子组件渲染到父组件 DOM 层级以外的 DOM 节点上。\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./component.css\"; //组件插槽\n\nvar portalElm = document.createElement('div');\nportalElm.className = \"txtcenter\";\ndocument.body.appendChild(portalElm);\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      show: true\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        show: !_this.state.show\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"\\u52A8\\u6001\\u5C55\\u73B0Portal\\u7EC4\\u4EF6\"), this.state.show ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, ReactDOM.createPortal(React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Portal\\u7EC4\\u4EF6\"), portalElm)) : null);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/sf/Desktop/zcy/hooksdemo/src/demos/components/portalsdemo.jsx"],"names":["React","ReactDOM","portalElm","document","createElement","className","body","appendChild","App","state","show","handleClick","setState","createPortal","Component"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,iBAAP,C,CACA;;AACA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAF,SAAS,CAACG,SAAV,GAAoB,WAApB;AACAF,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;;IAEMM,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAIRC,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADN,OAAd;AAGD,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,EAEG,KAAKF,KAAL,CAAWC,IAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMT,QAAQ,CAACY,YAAT,CAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAtB,EAA6CX,SAA7C,CAAN,CADD,GAEG,IAJN,CADF;AAQD;;;;EApBeF,KAAK,CAACc,S;;AAsBxB,eAAeN,GAAf","sourcesContent":["//Portals 提供了一个顶级的方法，使得我们有能力把一个子组件渲染到父组件 DOM 层级以外的 DOM 节点上。\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport \"./component.css\"\n//组件插槽\nconst portalElm = document.createElement('div');\nportalElm.className=\"txtcenter\"\ndocument.body.appendChild(portalElm)\n\nclass App extends React.Component {\n  state = {\n    show: true,\n  }\n\n  handleClick = () => {\n    this.setState({\n      show: !this.state.show,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <button className=\"btn btn-primary\" onClick={this.handleClick}>动态展现Portal组件</button>\n        {this.state.show ? (\n          <div>{ReactDOM.createPortal(<span>Portal组件</span>, portalElm)}</div>\n        ) : null}\n      </div>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}