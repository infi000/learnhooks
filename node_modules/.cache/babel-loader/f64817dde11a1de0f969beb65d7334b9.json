{"ast":null,"code":"import _slicedToArray from \"/Users/zhangchiyang/Desktop/study/learnhooks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/hooks/ComUseEffect.jsx\";\nimport React, { useState, useEffect } from \"react\"; //每一个组件内的函数（包括事件处理函数，effects，定时器或者API调用等等）会捕获某次渲染中定义的props和state。\n\nfunction App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  useEffect(function () {\n    var timer = setInterval(function () {\n      setCount(count + 1); // setCount((count)=>count+1);\n\n      console.log(\"count,\", count);\n    }, 1000);\n    return function () {\n      clearInterval(timer);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"count:\", count));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zhangchiyang/Desktop/study/learnhooks/src/demos/hooks/ComUseEffect.jsx"],"names":["React","useState","useEffect","App","count","setCount","timer","setInterval","console","log","clearInterval"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,GAAT,GAAe;AAAA,kBACaF,QAAQ,CAAC,CAAD,CADrB;AAAA;AAAA,MACNG,KADM;AAAA,MACCC,QADD;;AAGbH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAII,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC5BF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR,CAD4B,CAE5B;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,KAAtB;AACD,KAJsB,EAIpB,IAJoB,CAAvB;AAKA,WAAO,YAAM;AACXM,MAAAA,aAAa,CAACJ,KAAD,CAAb;AACD,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWF,KAAX,CADF,CADF;AAKD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n//每一个组件内的函数（包括事件处理函数，effects，定时器或者API调用等等）会捕获某次渲染中定义的props和state。\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setCount(count + 1);\n      // setCount((count)=>count+1);\n      console.log(\"count,\", count);\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>count:{count}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}